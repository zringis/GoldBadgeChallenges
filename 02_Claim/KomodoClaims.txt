﻿Komodo Claims Department

Komodo has a bug in its claims software and needs some new code. 

A Claim has the following properties:

ClaimID, ClaimType, Description, ClaimAmount, DateOfIncident, DateOfClaim, IsValid

Komodo allows an insurance claim to be made up to 30 days after an incident 
took place.  If the claim is not in the proper time limit, it is not valid. 

A ClaimType could be the following:
	Car, Home, Theft 

The app will need methods in to do the following:
Show a claims agent a menu:

Choose a menu item:
1. See all claims
2. Take care of next claim
3. Enter a new claim

For #1, a claims agent could see all items in the queue listed out like this:

ClaimID   Type    Description             Amount      DateOfAccident  DateOfClaim      IsValid
1          Car    Car accident on 465.     $400.00     4/25/18         4/27/18          True 
2          House  House fire in kitchen.   $4000.00    4/26/18         4/28/18          True
3          Theft  Stolen pancakes.         $4.00       4/27/18         6/01/18          False

For #2, when a claims agent needs to deal with an item they see the next item in the queue.

	Here are the details for the next claim to be handled:
	ClaimID: 1
	Type: Car
	Description: Car Accident on 464.
	Amount: $400.00
	DateOfAccident: 4/25/18
	DateOfClaim: 4/27/18
	IsValid: True
	
	Do you want to deal with this claim now(y/n)?  y
	
When the agent presses 'y', the claim will be pulled off the top of the queue. If the agent presses 'n', it will go back to the main menu.

For #3, when a claims agent enters new data about a claim they will be prompted for questions about it:

	Enter the claim id: 4
	Enter the claim type: Car
	Enter a claim description: Wreck on I-70.
	Amount of Damage: $2000.00
	Date Of Accident: 4/27/18
	Date of Claim: 4/28/18
	This claim is valid.

Your goal is to do the following:

1. Create a Claim class with properties, constructors, and any necessary fields.
2. Create a ClaimRepository class that has proper methods.
3. Create a Test Class for your repository methods.
4. Create a Program file that allows a claims manager to manage items in a list of claims.






public void SeeAllClaims()
        {
            Console.Clear();
            Queue<ClaimContent> claimQueue = _claimRepo.GetClaimQueue();
            string[] headers = new string[] { "ClaimID", "Type", "Description of Accident", "Amount", "Date of Accident", "Date of Claim", "IsValid" };
            UI_Format ConsoleFormatter = new UI_Format(1, UI_Format.Align.Left, headers);
            #region DATA
            //List<ClaimContent>
            foreach (ClaimContent content in claimQueue)
            {
                string[][] data = new string[][] {
                new string[] {
                $"{content.ClaimNumber}", $"{content.ClaimType}", $"{content.ClaimDescription}", $"${content.ClaimAmount}", $"{content.DateOfAccident}",$"{content.DateOfClaim}",$"{content.IsValid}"},

                };

                #endregion
                ArrayList arr = new ArrayList(data);

                ConsoleFormatter.RePrint(arr); //Get data variable from the link in the description
            }




            //Console.Clear();
            //Console.WriteLine($"\t>See All Claims");
            //Console.WriteLine($"ClaimID\tType\tDescription\t\tAmount\tDate of Accident\tDate of Claim\tIs Valid");
            //foreach (ClaimContent content in claimQueue)
            //{

            //    Console.WriteLine($"\n{content.ClaimNumber}\t{content.ClaimType}\t{content.ClaimDescription}\t${content.ClaimAmount}\t{content.DateOfAccident}\t{content.DateOfClaim}\t{content.IsValid}");

            //}
            Console.WriteLine($"\n\nEnd of Claims..." +
                $"\n Press Enter To Return To Menu...");
            Console.ReadLine();
        }